name: Backend CD

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'
  ECR_URI: '114439736588.dkr.ecr.us-east-1.amazonaws.com'
  ECR_REPO: 'backend'

jobs:

  lint:

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        working-directory: starter/backend
        run: pipenv install --dev

      - name: Run linter
        working-directory: starter/backend
        run: pipenv run lint

  test:

    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      working-directory: starter/backend
      run: pipenv install

    - name: Run tests
      working-directory: starter/backend
      run: pipenv run test

  build:

    runs-on: ubuntu-latest

    needs: [lint, test]

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ env.AWS_REGION }}

    - name: Docker login
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_URI }}

    - name: Build and push Docker Image
      working-directory: starter/backend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.API_URL }} --tag=${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ github.sha }} .
        docker push ${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ github.sha }}

  deploy:

    runs-on: ubuntu-latest

    needs: build

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy Docker image to Amazon EKS
      working-directory: starter/backend/k8s
      run: |
        aws eks update-kubeconfig --name moviepicture --region ${{ env.AWS_REGION }}
        kustomize edit set image backend=${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ github.sha }}
        kustomize build | kubectl apply -f -
     