name: Frontend CD

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'
  ECR_URI: '114439736588.dkr.ecr.us-east-1.amazonaws.com'
  ECR_REPO: 'frontend'
  API_URL: 'https://a00562c5098f842b49a56c19c0adb8de-624402968.us-east-1.elb.amazonaws.com/movies/'

jobs:

  lint:

    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Run linter
      working-directory: starter/frontend
      run: npm run lint

  test:

    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Run tests
      working-directory: starter/frontend
      run: npm test

  build:

    runs-on: ubuntu-latest

    needs: [lint, test]

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Docker login
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_URI }}

      - name: Build and push Docker Image
        working-directory: starter/frontend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.API_URL }} --tag=${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ github.sha }} .
          docker push ${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ github.sha }}

  deploy:

    runs-on: ubuntu-latest

    needs: build

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Deploy Docker image to Amazon EKS
        working-directory: starter/frontend/k8s
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ env.AWS_REGION }}
          kustomize edit set image frontend=${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
